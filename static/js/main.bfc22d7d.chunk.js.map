{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_BY_LENGTH","SORT_FIELD_ALPHABETICALLY","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","good1","good2","length","localeCompare","reverse","getPreparedGoods","className","type","onClick","cn","map","good","index","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAEIC,EAAuB,WACvBC,EAA4B,iBA2B3B,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAA0BC,EAA1B,GAA6D,IAA1BL,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,OAASD,EAAMC,OAE9B,KAAKb,EACH,OAAOW,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAKXP,GACFI,EAAcM,UAGTN,EAOLO,CAAiBlB,EAAiB,CAAEK,YAAWE,eAWjD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMf,EAAaJ,IAC5BiB,UAAWG,IAAG,SAAU,UACtB,CAAE,WAAYjB,IAAcH,IAJhC,iCASA,wBACEmB,QAAS,kBAAMf,EAAaL,IAC5BmB,KAAK,SACLD,UAAWG,IAAG,SAAU,UACtB,CAAE,WAAYjB,IAAcJ,IAJhC,4BASA,wBACEmB,KAAK,SACLC,QAhCmB,WACzBb,GAAeD,IAgCTY,UAAWG,IAAG,SAAU,aACtB,CAAE,YAAaf,IAJnB,sBASgB,KAAdF,GAAoBE,IACpB,wBACEa,KAAK,SACLC,QAtCe,WACvBf,EAAa,IACbE,GAAc,IAqCNW,UAAU,4BAHZ,sBAUJ,6BACGV,EAAac,KAAI,SAACC,EAAMC,GAAP,OAChB,oBAAe,UAAQ,OAAvB,SACGD,GADMA,YCpGnBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bfc22d7d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nconst SORT_FIELD_BY_LENGTH = 'byLength';\nconst SORT_FIELD_ALPHABETICALLY = 'alphabetically';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_BY_LENGTH:\n          return good1.length - good2.length;\n\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods\n  = getPreparedGoods(goodsFromServer, { sortField, isReversed });\n\n  const handleReverseClick = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleResetClick = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICALLY)}\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABETICALLY })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SORT_FIELD_BY_LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleReverseClick}\n          className={cn('button', 'is-warning',\n            { 'is-light': !isReversed })}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== '' || isReversed) && (\n          <button\n            type=\"button\"\n            onClick={handleResetClick}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good, index) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}